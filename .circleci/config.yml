version: 2
jobs:
  setup:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
    steps:
      - checkout

      - run: gem update --system
      - run: gem install bundler

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: bundle exec rake webpacker:compile
      - save_cache:
          key: webpack-{{ .Revision }}
          paths:
            - /home/circleci/project/public/packs-test/
  test:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          DATABASE_URL: postgresql://postgres:secret@localhost:5432
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: circleci-timetracker
          POSTGRES_DB: timetracker_test
          POSTGRES_PASSWORD: secret
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          keys:
            - webpack-{{ .Revision }}
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: gem update --system
      - run: gem install bundler
      - run: bundle install --path vendor/bundle
      - run: sudo apt install postgresql-client
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Additional checks
          command: |
              if [ $CIRCLE_NODE_INDEX = 0 ]; then
                bundle exec bundle-audit update
                bundle exec bundle-audit check
              elif [ $CIRCLE_NODE_INDEX = 1 ]; then
                bin/rubocop
              fi
      - run:
          name: Specs
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out ~/spec-timings/rspec.xml --format progress
      - store_test_results:
          path: ~/spec-timings
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            cat >~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            EOF
            chmod 600 ~/.netrc
            curl https://cli-assets.heroku.com/install.sh | sh
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/rails-app.git master
            heroku run rake db:migrate -a rails-app
          no_output_timeout: 10m

workflows:
  version: 2
  setup_and_test:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master