version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/timetracker
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment: # environment variables for primary container
            BUNDLE_JOBS: 3
            BUNDLE_RETRY: 3
            BUNDLE_PATH: vendor/bundle
            PGHOST: 127.0.0.1
            PGUSER: circleci-timetracker
            RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci-timetracker
          POSTGRES_DB: timetracker_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout
      - add_ssh_keys
      - restore_cache:
          keys:
            - timetracker-dependency-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - timetracker-dependency-cache-{{ .Branch }}-
            - timetracker-dependency-cache-
      - run:
          name: Export env
          command: echo -e "export RAILS_ENV=test\nexport RACK_ENV=test" >> $BASH_ENV
      - run:
          name: Bundle Install
          command: |
            gem install bundler:2.1.4
            bundle config without development:production
            bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=3 --retry=3
      - save_cache:
          key: timetracker-dependency-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - timetracker-yarn-{{ checksum "yarn.lock" }}
            - timetracker-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn


      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rake db:create db:schema:load --trace
      - type: shell
        command: |
          bundle exec rspec --format progress \
                --format RspecJunitFormatter \
                --out /tmp/test-results/rspec.xml \
                --format progress \
                $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            cat >~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            EOF
            chmod 600 ~/.netrc
            curl https://cli-assets.heroku.com/install.sh | sh
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/rails-app.git master
            heroku run rake db:migrate -a rails-app
          no_output_timeout: 10m

workflows:
  version: 2
  setup_and_test:
    jobs:
      - build
      - deploy:
        requires:
          - build
          filters:
            branches:
              only: master