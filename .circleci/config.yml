version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/timetracker
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
      - image: circleci/postgres:9.4

    steps:
      - checkout
      - add_ssh_keys
      - restore_cache:
          keys:
            - timetracker-dependency-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - timetracker-dependency-cache-{{ .Branch }}-
            - timetracker-dependency-cache-
      - run:
          name: Export env
          command: echo -e "export RAILS_ENV=test\nexport RACK_ENV=test" >> $BASH_ENV
      - run:
          name: Bundle Install
          command: |
            gem install bundler:2.1.4
            bundle config without development:production
            bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=3 --retry=3
      - save_cache:
          key: foobar-dependency-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            mkdir -p config && echo 'test:
                adapter: postgresql
                encoding: unicode
                database: foobar_test
                pool: 5
                username: postgres
                host: localhost
              ' > config/database.yml
            export RAILS_ENV="test"
            export RACK_ENV="test"
            bundle exec rake db:create db:schema:load --trace
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results